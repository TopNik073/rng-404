name: Deploy to Server

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ghcr.io/topnik073/rng-404:latest

      - name: Upload .env to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script_stop: true
          script: |
            echo "${{ vars.ENV_FILE }}" | grep -v "DRONE_SSH" > /root/rng-404/.env
            echo ".env uploaded to server"

      - name: Copy docker-compose file to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.prod.yml"
          target: "/root/rng-404/"

      - name: Deploy on remote server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "Starting deployment..."

            echo "Logging into GitHub Container Registry..."
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

            echo "Pulling images..."
            cd /root/rng-404
            docker compose -f docker-compose.prod.yml pull

            echo "Recreating containers..."
            docker compose -f docker-compose.prod.yml up -d --remove-orphans

            echo "Deployment complete"